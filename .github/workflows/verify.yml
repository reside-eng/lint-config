name: Verify

on: [pull_request]

env:
  NODE_VERSION: 16.x

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.2.0

      - name: Use Node.js
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure package manager
        run: |
          echo Configuring NPM_PUBLISH_TOKEN globally for .npmrc
          npm config set '//registry.npmjs.org/:_authToken' ${{ env.NPM_TOKEN }}
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: turbo run test

      - name: Lint
        run: turbo run lint

      - name: Build
        run: turbo run build

      - name: Archive workspace on failure
        if: failure()
        run: zip -r workspace-files ./

      - uses: actions/upload-artifact@v3.1.1
        if: failure()
        with:
          name: workspace
          path: workspace-files.zip

  notification:
    if: always()
    name: notification
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.2.0

      - uses: technote-space/workflow-conclusion-action@v3.0.1

      - uses: reside-eng/workflow-status-notification-action@v1.0.7
        with:
          current-status: ${{ env.WORKFLOW_CONCLUSION }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_PLATFORM_PROD }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
