name: Publish to NPM

on:
  push:
    branches:
      - master
      - next
      - alpha
      - beta

jobs:
  build:
    name: Build, Verify, and Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]
    env:
      LERNA_DEFAULT_ARGS: --exact --concurrency 1 --yes --conventional-commits --create-release github --allow-branch "*"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.3.4

      - run: |
          git fetch --prune --unshallow

      - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Configure Package Manager
        run: |
          echo Configuring NPM_PUBLISH_TOKEN globally for .npmrc
          npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_PUBLISH_TOKEN }}
          npm whoami

      - name: Configure Git to CI user
        run: |
          git config --global user.email 23222038+reside-camacho@users.noreply.github.com
          git config --global user.name reside-camacho

      - name: Check Environment Info
        run: |
          echo Node Version: `node --version`
          echo NPM Version: `npm --version`
          echo Yarn Version: `yarn --version`

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Test
        run: |
          yarn lint
          yarn test

      - name: Publish to @latest dist-tag
        run: |
          echo lerna publish $LERNA_DEFAULT_ARGS --conventional-graduate
          yarn lerna publish $LERNA_DEFAULT_ARGS --conventional-graduate
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'

      - name: Publish to a prerelease dist-tag
        run: |
          echo lerna publish $LERNA_DEFAULT_ARGS --conventional-prerelease --dist-tag ${GITHUB_REF##*/} --preid ${GITHUB_REF##*/}
          yarn lerna publish $LERNA_DEFAULT_ARGS --conventional-prerelease --dist-tag ${GITHUB_REF##*/} --preid ${GITHUB_REF##*/}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref != 'refs/heads/master'

      - name: Archive Workspace on Failure
        if: failure()
        run: zip -r workspace-files ./

      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: workspace
          path: workspace-files.zip
